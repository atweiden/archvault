#!/usr/bin/nft -f

flush ruleset

# ==============================================================================
# constants {{{

# primary internet-connected interface, needed on WireGuard VPN server
define INET_INTERFACE = enp0s3
# WireGuard interface, needed on WireGuard VPN server
define WIREGUARD_INTERFACE = wg0
# WireGuard ports, needed on WireGuard VPN server
define WIREGUARD_PORTS = { 51820 }

# end constants }}}
# ==============================================================================

table inet filter {
  chain base-checks {
    # drop invalid connections early
    ct state invalid counter drop comment "drop invalid packets"

    # allow established/related connections
    ct state {established, related} counter accept comment "accept all connections related to connections made by us"
  }

  chain input {
    type filter hook input priority 0; policy drop;

    # use jump to continue processing after the base checks
    jump base-checks

    # allow from loopback
    iifname lo accept comment "accept loopback"
    iifname != lo ip daddr 127.0.0.1/8 counter drop comment "drop connections to loopback not coming from loopback"
    iifname != lo ip6 daddr ::1/128 counter drop comment "drop connections to loopback not coming from loopback"

    # mitigate ping floods
    ip protocol icmp icmp type { echo-reply, echo-request } limit rate over 7/second burst 4 packets drop
    ip6 nexthdr icmpv6 icmpv6 type { echo-reply, echo-request } limit rate over 7/second burst 4 packets drop

    # allow icmp and igmp
    ip protocol icmp icmp type { destination-unreachable, parameter-problem, router-advertisement, router-solicitation, time-exceeded } counter accept comment "accept icmp"
    ip6 nexthdr icmpv6 icmpv6 type { destination-unreachable, mld-listener-query, mld-listener-report, mld-listener-reduction, nd-router-solicit, nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert, ind-neighbor-solicit, ind-neighbor-advert, mld2-listener-report, packet-too-big, parameter-problem, time-exceeded } counter accept comment "accept icmpv6"
    ip protocol igmp counter accept comment "accept igmp"

    # allow ssh, mitigate brute force login attempts
    tcp dport ssh ct state new limit rate 7/minute counter accept comment "accept ssh"

    # everything else
    include "/etc/nftables/includes/table/inet/filter/input/*.nft"
    ip protocol tcp reject with tcp reset
    ip protocol udp reject
    reject with icmpx type port-unreachable
    counter comment "count dropped packets"
    counter log prefix "nft#inet#filter#input: "
  }

  chain forward {
    type filter hook forward priority 0; policy drop;
    jump base-checks
    include "/etc/nftables/includes/table/inet/filter/forward/*.nft"
    counter comment "count dropped packets"
    counter log prefix "nft#inet#filter#forward: "
  }

  chain output {
    type filter hook output priority 0; policy accept;
    include "/etc/nftables/includes/table/inet/filter/output/*.nft"
    counter comment "count accepted packets"
    counter log prefix "nft#inet#filter#output: "
  }
}

include "/etc/nftables/includes/table/*.nft"

# vim: set filetype=conf foldmethod=marker foldlevel=0 nowrap:
